document.addEventListener("DOMContentLoaded", function () {
    console.log("‚úÖ JavaScript ƒë√£ t·∫£i th√†nh c√¥ng!");

    // ‚úÖ L·∫Øng nghe s·ª± ki·ªán click tr√™n n√∫t tƒÉng/gi·∫£m s·ªë l∆∞·ª£ng
    document.querySelectorAll(".btn-quantity").forEach(button => {
        button.addEventListener("click", function () {
            console.log("üëâ N√∫t ƒë∆∞·ª£c nh·∫•n:", this);
            let sanPhamId = this.getAttribute("data-id");
            let input = document.querySelector(`.quantity-input[data-id="${sanPhamId}"]`);

            if (!input) {
                console.error("‚ùå Kh√¥ng t√¨m th·∫•y input s·ªë l∆∞·ª£ng!");
                return;
            }

            let currentQuantity = parseInt(input.value);
            let newQuantity = this.classList.contains("increase") ? currentQuantity + 1 : Math.max(1, currentQuantity - 1);

            // ‚úÖ C·∫≠p nh·∫≠t giao di·ªán ngay l·∫≠p t·ª©c
            input.value = newQuantity;

            // ‚úÖ G·ª≠i request c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng l√™n server
            updateCartQuantity(sanPhamId, newQuantity);
        });
    });

    // ‚úÖ L·∫Øng nghe s·ª± ki·ªán thay ƒë·ªïi tr·ª±c ti·∫øp tr√™n input s·ªë l∆∞·ª£ng
    document.querySelectorAll(".quantity-input").forEach(input => {
        input.addEventListener("change", function () {
            let sanPhamId = this.getAttribute("data-id");
            let newQuantity = Math.max(1, parseInt(this.value) || 1);

            // ‚úÖ ƒê·∫£m b·∫£o UI kh√¥ng b·ªã l·ªói khi nh·∫≠p s·ªë kh√¥ng h·ª£p l·ªá
            this.value = newQuantity;

            // ‚úÖ G·ª≠i request c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng l√™n server
            updateCartQuantity(sanPhamId, newQuantity);
        });
    });

    // ‚úÖ ƒê·∫£m b·∫£o c·∫≠p nh·∫≠t l·∫°i s·ªë lo·∫°i s·∫£n ph·∫©m khi load trang
    updateCartCount();
});

// ‚úÖ H√†m g·ª≠i AJAX ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng v√† t·ªïng ti·ªÅn ƒë∆°n h√†ng
function updateCartQuantity(sanPhamId, newQuantity) {
    if (!sanPhamId || isNaN(sanPhamId)) {
        console.error("‚ùå L·ªói: sanPhamId kh√¥ng h·ª£p l·ªá!", sanPhamId);
        return;
    }

    fetch(`/cart/update`, {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: `sanPhamId=${sanPhamId}&quantity=${newQuantity}`
    })
        .then(response => response.json())
        .then(data => {
            console.log("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!", data);

            // ‚úÖ C·∫≠p nh·∫≠t t·ªïng ti·ªÅn s·∫£n ph·∫©m
            let productPriceElement = document.querySelector(`.product-price[data-id="${sanPhamId}"]`);
            let unitPrice = parseFloat(productPriceElement.getAttribute("data-unit-price"));
            productPriceElement.textContent = (unitPrice * newQuantity).toLocaleString() + "‚Ç´";

            // ‚úÖ C·∫≠p nh·∫≠t t·ªïng ti·ªÅn ƒë∆°n h√†ng
            document.getElementById("total-price").textContent = data.totalAmount.toLocaleString() + "‚Ç´";

            // ‚úÖ ·∫®n n√∫t tƒÉng n·∫øu s·ªë l∆∞·ª£ng ƒë·∫°t t·ªëi ƒëa
            let increaseButton = document.querySelector(`.btn-quantity.increase[data-id="${sanPhamId}"]`);
            if (increaseButton) {
                if (newQuantity >= data.soLuongTonKho) {
                    increaseButton.setAttribute("disabled", "true");
                } else {
                    increaseButton.removeAttribute("disabled");
                }
            }
        })
        .catch(error => console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t:", error));
}

// ‚úÖ H√†m c·∫≠p nh·∫≠t s·ªë lo·∫°i s·∫£n ph·∫©m tr√™n bi·ªÉu t∆∞·ª£ng gi·ªè h√†ng
function updateCartCount() {
    fetch('/cart/count')
        .then(response => response.json())
        .then(data => {
            console.log("üìå API `/cart/count` tr·∫£ v·ªÅ s·ªë lo·∫°i s·∫£n ph·∫©m:", data);
            let cartBadge = document.getElementById('cart-badge');
            if (cartBadge) {
                cartBadge.textContent = data; // ‚úÖ Ch·ªâ hi·ªÉn th·ªã s·ªë lo·∫°i s·∫£n ph·∫©m
            }
        })
        .catch(error => console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t s·ªë lo·∫°i s·∫£n ph·∫©m:", error));
}